This is to build yocto sdcard image for following SBC's:
rpi4b  ( Raspberry Pi 4B )
radxa  ( Rock Pi 4B plus )
rk3328 ( Renegade ROC-RK3328-CC )
tinker ( ASUS TinkerBoard )

Steps to build yocto sdcard image:

1. git clone https://github.com/chenphilip888/build-yocto-4SBCs.git
 
2. Install cross compiler:
   wget https://releases.linaro.org/components/toolchain/binaries/7.3-2018.05/aarch64-linux-gnu/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz
   sudo tar xvf gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz  -C /usr/local/
   wget https://releases.linaro.org/components/toolchain/binaries/7.3-2018.05/arm-linux-gnueabihf/gcc-linaro-7.3.1-2018.05-x86_64_arm-linux-gnueabihf.tar.xz
   sudo tar xvf gcc-linaro-7.3.1-2018.05-x86_64_arm-linux-gnueabihf.tar.xz -C /usr/local/

3. cd ~/build-yocto-4SBCs/rpi4b
   git clone git://git.yoctoproject.org/poky -b dunfell
   cd poky
   git clone git://git.yoctoproject.org/meta-raspberrypi.git -b dunfell
   git clone https://git.openembedded.org/meta-openembedded -b dunfell
   source oe-init-build-env
   vi ../meta-raspberrypi/conf/machine/include/rpi-base.inc ( add
   overlays/pwm-2chan.dtbo overlays/uart2.dtbo in RPI_KERNEL_DEVICETREE_OVERLAYS)
   cp ../../patches/bblayers.conf ./conf/
   cp ../../patches/local.conf ./conf/
   bitbake -s
   bitbake -c cleansstate core-image-x11
   bitbake -k core-image-x11

   The result image is in tmp/deploy/images/raspberrypi4-64/core-image-x11-raspberrypi4-64.wic.bz2
   bzip2 -d -f tmp/deploy/images/raspberrypi4-64/core-image-x11-raspberrypi4-64.wic.bz2
   sudo dd if=~/build-yocto-4SBCs/rpi4b/poky/build/tmp/deploy/images/raspberrypi4-64/core-image-x11-raspberrypi4-64.wic of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   sudo e2fsck -p -f /dev/mmcblk0p2
   sudo resize2fs /dev/mmcblk0p2
   sudo e2label /dev/mmcblk0p2 rootfs
   sync
   eject sdcard; plugin sdcard again
   sudo vi /media/$USER/boot/config.txt ( delete dtparam=i2c1=on, add
   dtparam=audio=on
   dtparam=i2c_arm=on
   dtparam=spi=on
   enable_uart=1
   dtoverlay=vc4-fkms-v3d
   max_framebuffers=2
   dtoverlay=pwm-2chan,pin=12,func=4,pin2=13,func2=4
   dtoverlay=uart2 )
   sudo vi /media/$USER/rootfs/etc/network/interfaces ( delete everything after iface lo inet loopback )

   \rm -rf ~/build-yocto-4SBCs/rpi4b/poky/build/tmp/work

4. cd ~/build-yocto-4SBCs/radxa
   git clone git://git.yoctoproject.org/poky -b thud
   cd poky
   git clone git://git.openembedded.org/meta-openembedded.git -b thud
   git clone https://github.com/nishantpoorswani/meta-radxa.git -b thud
   source oe-init-build-env
   cd ../../
   make apply_patches

   cd poky; source oe-init-build-env;
   bitbake -s
   bitbake -c cleansstate radxa-console-image
   bitbake -k radxa-console-image

   The result is in ~/build-yocto-4SBCs/radxa/poky/build/tmp/deploy/images/rockpi-4b-rk3399/radxa-console-image-rockpi-4b-rk3399-gpt.img

   sudo dd if=~/build-yocto-4SBCs/radxa/poky/build/tmp/deploy/images/rockpi-4b-rk3399/radxa-console-image-rockpi-4b-rk3399-gpt.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   sudo e2fsck -p -f /dev/mmcblk0p5
   sudo resize2fs /dev/mmcblk0p5
   sudo e2label /dev/mmcblk0p5 rootfs
   sync
   eject sdcard; plugin sdcard again
   sudo vi /media/$USER/rootfs/etc/network/interfaces ( delete everything after iface lo inet loopback )

   \rm -rf ~/build-yocto-4SBCs/radxa/poky/build/tmp/work

5. cd ~/build-yocto-4SBCs/rk3328
   git clone https://github.com/radxa/kernel.git -b release-4.4-rockpi4
   mv kernel kernel.git
   \rm -rf kernel.git/.git
   git clone git://git.yoctoproject.org/poky -b thud
   cd poky
   git clone git://git.openembedded.org/meta-openembedded.git -b thud
   git clone https://github.com/nishantpoorswani/meta-radxa.git -b thud
   source oe-init-build-env
   cd ../../
   make get_kernel
   vi ./patches/linux-rockchip_4.4.bb ( change SRC_URI kernel path to your path )
   make apply_patches

   cd poky; source oe-init-build-env;
   bitbake -s
   bitbake -c cleansstate radxa-console-image
   bitbake -k radxa-console-image

   The result is in ~/build-yocto-4SBCs/rk3328/poky/build/tmp/deploy/images/evb-rk3328/radxa-console-image-evb-rk3328-gpt.img

   sudo dd if=~/build-yocto-4SBCs/rk3328/poky/build/tmp/deploy/images/evb-rk3328/radxa-console-image-evb-rk3328-gpt.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   sudo e2fsck -p -f /dev/mmcblk0p5
   sudo resize2fs /dev/mmcblk0p5
   sudo e2label /dev/mmcblk0p5 rootfs
   sync
   eject sdcard; plugin sdcard again
   sudo vi /media/$USER/rootfs/etc/network/interfaces ( delete everything after iface lo inet loopback )

   \rm -rf ~/build-yocto-4SBCs/rk3328/poky/build/tmp/work

6. cd ~/build-yocto-4SBCs/tinker
   Skip yocto u-boot, because mainline u-boot spl is bigger than 32 KB, and debian_u-boot has compilation problem in yocto. So compile debian_u-boot separately.
   git clone https://github.com/TinkerBoard/debian_u-boot.git -b release
   make u-boot

   git clone https://github.com/TinkerBoard/debian_kernel.git -b release
   mv debian_kernel debian_kernel.git
   \rm -rf debian_kernel.git/.git
   git clone git://git.yoctoproject.org/poky -b thud
   cd poky
   git clone git://git.openembedded.org/meta-openembedded.git -b thud
   git clone https://github.com/meta-qt5/meta-qt5.git -b thud
   git clone https://gitlab.com/tinkerboard-yocto/meta-rockchip
   git clone https://gitlab.com/tinkerboard-yocto/meta-rockchip-extra
   source oe-init-build-env
   cd ../../
   make get_kernel
   vi ./patches/linux-rockchip_4.4.bb ( change SRC_URI kernel path to your path )
   make apply_patches

   cd poky; source oe-init-build-env;
   bitbake -s
   bitbake -c cleansstate core-image-x11
   bitbake -k core-image-x11

   The result is in ~/build-yocto-4SBCs/tinker/poky/build/tmp/deploy/images/tinker-rk3288/core-image-x11-tinker-rk3288-gpt.img

   sudo dd if=~/build-yocto-4SBCs/tinker/poky/build/tmp/deploy/images/tinker-rk3288/core-image-x11-tinker-rk3288-gpt.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   sudo e2fsck -p -f /dev/mmcblk0p2
   sudo resize2fs /dev/mmcblk0p2
   sudo e2label /dev/mmcblk0p2 rootfs
   sync
   eject sdcard; plugin sdcard again
   sudo vi /media/$USER/rootfs/etc/network/interfaces ( delete everything after iface lo inet loopback )

   \rm -rf ~/build-yocto-4SBCs/tinker/poky/build/tmp/work

plugin sdcard to SBC
login:
username: root
password: none   ( for radxa and rk3328 password is rock )

setup wifi:
Note: rk3328 need to plugin usb wifi dongle.

nmcli dev wifi connect "SSID" password "PASSWORD"

\rm /etc/localtime
ln -s /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
date

glmark2-es2-drm ( rpi4b run glmark2-es2 )

aplay -l
